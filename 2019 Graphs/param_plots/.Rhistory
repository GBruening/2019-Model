labs(x='Effort Variable',title=eval(param),y=eval(param),color="Effort\nRep")
g
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc),group=minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Effort\nRep")+
scale_color_manual(labels=parse(text=fitting_labs))
min_labs = c(TeX('Stress $(N/m^2)$'),
TeX('$Stress^2$ $(N/m^2)^2$'),
TeX('Force $(N)$'),
TeX('$Force^2$ $(N^2)$'),
TeX('Active State$'),
TeX('Active $State^2$'),
TeX('Neural Drive'),
TeX('Neural $Drive^2$'),
TeX('Energy Model $(W)$'))
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc),group=minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Effort\nRep")+
scale_color_manual(labels=parse(text=fitting_labs))
g
util_param_select = c(6,7,8,9,10,11,12)
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc),group=minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Effort\nRep")+
scale_color_discrete(labels=parse(text=fitting_labs))+
theme_classic()
g
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc),group=minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=fitting_labs))+
theme_classic()
g
min_labs
string
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=fitting_labs))+
theme_classic()
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=fitting_labs))+
theme_classic()
unique(temp_pframe$minfunc)
temp_pframe = parameter_frame
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc),group=minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=fitting_labs))+
theme_classic()
g
temp_pframe = parameter_frame
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfunc),group=minfunc))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)
g
temp_pframe
g+scale_x_discrete(labels=parse(text=min_labs))
g+scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")
parse(text=fitting_labs)
Q
Q
Q
Q
Q
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
temp_pframe = parameter_frame
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(fitting_vars),param_count*2+2]-temp_pframe[length(fitting_vars),param_count*2+3]
ymaxval=temp_pframe[length(fitting_vars),param_count*2+2]+temp_pframe[length(fitting_vars),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)
g
g+scale_x_discrete(labels=parse(text=min_labs))
ymin
yminval
temp_pframe
length(temp_pframe)
temp_pframe
length(temp_pframe)
size(temp_pframe)
length(temp_pframe$minfunc)
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+2]-temp_pframe[length(temp_pframe$minfunc),param_count*2+3]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+2]+temp_pframe[length(temp_pframe$minfunc),param_count*2+3]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))
g
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
g
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+2]-temp_pframe[length(temp_pframe$minfunc),param_count*2+3]
temp_pframe[length(temp_pframe$minfunc),param_count*2+2]
length(temp_pframe$minfunc)
param_count*2+2
temp_pframe[63,4]
temp_pframe[1,1]
temp_pframe[1,1,1]
temp_pframe[1,1,1,1]
temp_pframe[1]
temp_pframe[1][1]
temp_pframe[1][1][1]
temp_pframe[1,1]
parameter_frame[1,1]
parameter_frame[6,1]
parameter_frame[6,7]
parameter_frame[63,7]
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))
g
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=fitting_labs))
g
length(fitting_labs)
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=min_labs))
g
temp_pframe = parameter_frame
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=min_labs))+
theme_classic()+
theme(legend.position='none',axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.title = element_text(hjust = 0.5))
g
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
groupparamplot_c
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
string = paste('ggsave(filename,plot=groupparamplot,useDingbats = FALSE,width=14,height=9,units=\'in\')',sep='')
eval(parse(text=string))
make_equation = TeX('$\dot{e} = a+\frac{bm^c}{d}')
make_equation = TeX('$\dot{e} = a+\frac{bm^c}{d}$')
'$\dot{e} = a+\frac{bm^c}{d}$'
make_equation = TeX('$\\dot{e} = a+\\frac{bm^c}{d}$')
make_equation
string = paste('g<-plot_grid(groupparamplot_a,
groupparamplot_b,
groupparamplot_c,
groupparamplot_d,
align = \'vh\',
labels = c(\'A\',\'B\',\'C\',\'D\'),
hjust=-1,
nrow=2)',sep='')
eval(parse(text=string))
string = paste('add_legend <- get_legend(groupparamplot_a+theme(legend.position=\'right\'))',sep='')
eval(parse(text=string))
make_equation = TeX('$\\dot{e} = a+\\frac{bm^c}{d}$')
add_legend <- plot_grid(make_equation,ncol=1,rel_heights = .2,.8)
g<-plot_grid(g,
add_legend,
nrow=1,
rel_widths = c(.8,.2))
title <- ggdraw() +
draw_label("Parameter Fitting",
fontface = 'bold')
g<-plot_grid(title,
g,
ncol = 1,
rel_heights = c(0.1, 1))
eval(parse(text = paste('groupparamplot<-g',sep='')))
setwd(paste(parent_fold,'/2019 Graphs/param_plots',sep=''))
filename = paste('groupparamplot.pdf',sep='')
string = paste('ggsave(filename,plot=groupparamplot,useDingbats = FALSE,width=14,height=9,units=\'in\')',sep='')
eval(parse(text=string))
make_equation = annotate(TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
ggplot()+annotate(TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
ggplot()+geom_point()+annotate(TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
ggplot()+geom_point()
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))+theme_void()
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))+xlim(-.15,.15)+ylim(-.1,.1)
ggplot()+geom_point()+xlim(-.15,.15)+ylim(-.1,.1)
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))+xlim(-.15,.15)+ylim(-.1,.1)
ggplot()+geom_point()+xlim(-.15,.15)+ylim(-.1,.1)+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
+xlim(-.15,.15)+ylim(-.1,.1)
ggplot()+geom_point()+xlim(-.15,.15)+ylim(-.1,.1)+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'))
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=30)+theme_void()
ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)+theme_void()
string = paste('g<-plot_grid(groupparamplot_a,
groupparamplot_b,
groupparamplot_c,
groupparamplot_d,
align = \'vh\',
labels = c(\'A\',\'B\',\'C\',\'D\'),
hjust=-1,
nrow=2)',sep='')
eval(parse(text=string))
string = paste('add_legend <- get_legend(groupparamplot_a+theme(legend.position=\'right\'))',sep='')
eval(parse(text=string))
make_equation = ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)+theme_void()
add_legend <- plot_grid(make_equation,ncol=1,rel_heights = .2,.8)
g<-plot_grid(g,
add_legend,
nrow=1,
rel_widths = c(.8,.2))
title <- ggdraw() +
draw_label("Parameter Fitting",
fontface = 'bold')
g<-plot_grid(title,
g,
ncol = 1,
rel_heights = c(0.1, 1))
eval(parse(text = paste('groupparamplot<-g',sep='')))
setwd(paste(parent_fold,'/2019 Graphs/param_plots',sep=''))
filename = paste('groupparamplot.pdf',sep='')
g
string = paste('g<-plot_grid(groupparamplot_a,
groupparamplot_b,
groupparamplot_c,
groupparamplot_d,
align = \'vh\',
labels = c(\'A\',\'B\',\'C\',\'D\'),
hjust=-1,
nrow=2)',sep='')
eval(parse(text=string))
string = paste('add_legend <- get_legend(groupparamplot_a+theme(legend.position=\'right\'))',sep='')
eval(parse(text=string))
make_equation = ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)+theme_void()
add_legend <- plot_grid(make_equation,add_legend,ncol=1,rel_heights = .2,.8)
make_equation
ggplot(parameter_frame)+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)+theme_void()
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
g
make_equation
add_legend <- plot_grid(make_equation,add_legend,ncol=1,rel_heights = .2,.8)
add_legend
make_equation = ggplot()+geom_point()+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)
add_legend <- plot_grid(make_equation,add_legend,ncol=1,rel_heights = .2,.8)
add_legend
make_equation
ggplot()+geom_point(aes(x=0,y=0),size=0)+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)
string = paste('add_legend <- get_legend(groupparamplot_a+theme(legend.position=\'right\'))',sep='')
eval(parse(text=string))
add_legend
g<-plot_grid(g,
add_legend,
nrow=1,
rel_widths = c(.8,.2))
g
g+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)
g+annotate('text',x=10,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=20)
g+annotate('text',x=3,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=20)
g+annotate('text',x=1,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=20)
g+annotate('text',x=.8,y=.80,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=20)
g+annotate('text',x=.93,y=.850,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=5)
g+annotate('text',x=.85,y=.850,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=11)
g+annotate('text',x=.85,y=.850,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=8)
g+annotate('text',x=.9,y=.85,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=10)
g+annotate('text',x=.9,y=.85,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=9)
Q
Q
Q
Q
Q
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
Q
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
fitting_labs = fitting_labs[util_param_select]
fitting_vars
util_param_select = c(5,6,7,8,9,10,11,12)
fitting_vars = fitting_vars[util_param_select]
fitting_labs = fitting_labs[util_param_select]
fitting_vars
parameter_frame = filter(parameter_frame,var_lab %in% fitting_vars)
paramter_frame
parameter_frame
fitting_labs
fitting_vars = fitting_vars[util_param_select]
fitting_labs = fitting_labs[util_param_select]
parameter_frame = filter(parameter_frame,var_lab %in% fitting_vars)
util_params = c('a','b','c','d')
param_count = 0
for (param in util_params){
param_count = param_count+1
# temp_pframe = filter(parameter_frame,minfunc==eval(minfunc1))
temp_pframe = parameter_frame
string = paste('g<-ggplot(parameter_frame,aes(x=factor(variable),y=',param,'_val,color=factor(minfuncnum),group=minfuncnum))+geom_point(size=3, position=position_dodge(width=.8))+geom_errorbar(aes(x=factor(variable),ymin=',param,'_val-',param,'_ste,ymax=',param,'_val+',param,'_ste),width=.3,size=1,position=position_dodge(width=.8))',sep='')
eval(parse(text = string))
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=min_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=min_labs))+
theme_classic()+
theme(legend.position='none',axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.title = element_text(hjust = 0.5))
# ,values = colorRampPalette(brewer.pal(12,'Dark2'))(12))
eval(parse(text = paste('groupparamplot_',param,'<-g',sep='')))
}
string = paste('g<-plot_grid(groupparamplot_a,
groupparamplot_b,
groupparamplot_c,
groupparamplot_d,
align = \'vh\',
labels = c(\'A\',\'B\',\'C\',\'D\'),
hjust=-1,
nrow=2)',sep='')
eval(parse(text=string))
string = paste('add_legend <- get_legend(groupparamplot_a+theme(legend.position=\'right\'))',sep='')
eval(parse(text=string))
# make_equation = ggplot()+geom_point(aes(x=0,y=0),size=0)+annotate('text',x=0,y=0,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=40)#+theme_void()
# add_legend <- plot_grid(make_equation,add_legend,ncol=1,rel_heights = .2,.8)
g<-plot_grid(g,
add_legend,
nrow=1,
rel_widths = c(.8,.2))
g<-g+annotate('text',x=.9,y=.85,label=TeX('$\\dot{e} = a+\\frac{bm^c}{d}$'),size=9)
title <- ggdraw() +
draw_label("Parameter Fitting",
fontface = 'bold')
g<-plot_grid(title,
g,
ncol = 1,
rel_heights = c(0.1, 1))
eval(parse(text = paste('groupparamplot<-g',sep='')))
setwd(paste(parent_fold,'/2019 Graphs/param_plots',sep=''))
filename = paste('groupparamplot.pdf',sep='')
g
fitting_labs
fitting_vars
Q
Q
Q
Q
Q
Q
Q
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
g
fitting_vars
fitting_labs
Q
Q
Q
Q
Q
Q
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
eval(parse(text = string))
eval(parse(text = string))
g
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=fitting_labs))+
labs(x='Effort Variable',title=eval(param),y=eval(param),color="Minimization\nFunction")+
scale_color_discrete(labels=parse(text=min_labs))+
theme_classic()+
theme(legend.position='none',axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.title = element_text(hjust = 0.5))
g
fitting_labs
length(fitting_labs)
parameter_frame
unique(parameter_frame$variable)
unique(parameter_frame$var_lab)
fitting_vars
parameter_frame
unique(parameter_frame$var_lab)
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
temp_pframe
fitting_vars
parameter_frame
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
eval(parse(text = string))
g
yminval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]-temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
ymaxval=temp_pframe[length(temp_pframe$minfunc),param_count*2+3]+temp_pframe[length(temp_pframe$minfunc),param_count*2+4]
g<-g+
geom_rect(xmin=0,xmax=length(fitting_vars)+1,ymin=yminval,ymax=ymaxval,alpha=.005)+
scale_x_discrete(labels=parse(text=fitting_labs))
g
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
Q
Q
Q
Q
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
Fitted_model
summary9Fitted_model)
summary(Fitted_model)
qqplot(Fitted_model)
Fitted_model=nls(fitted ~ a1 + 100*a2*(effmass^a3)/(movedur^a4),
data=tempdata,
start=list(a1=1,a2=.1,a3=1,a4=1))
testing <- nlsBoot(Fitted_model)
install.packages('nlstools')
library(nlstools)
testing <- nlsBoot(Fitted_model)
testing
summary(testing)
Fitted_model
summary(Fitted_model)
summary(testing)
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
temp_data
tempdata
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
source('D:/Users/Gary/Google Drive/2019 Model/testing.R')
debugSource('D:/Users/Gary/Google Drive/2019 Model/testing.R')
ggplot(tempdata,aes(x=movedur,y=mpowernet,color=factor(c)))+#,shape=factor(metabolic)))+
geom_point(size=3)
Q
Q
Q
